% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/setup_conda.R
\name{setup_conda}
\alias{setup_conda}
\title{Setup conda}
\usage{
setup_conda(
  path = reticulate::miniconda_path(),
  update = TRUE,
  force = FALSE,
  packages = c("anndata", "scanpy"),
  ...
)
}
\arguments{
\item{path}{The location where Miniconda is (or should be) installed. Note
that the Miniconda installer does not support paths containing spaces. See
\link[reticulate]{miniconda_path} for more details on the default path used by \code{reticulate}.}

\item{update}{Boolean; update to the latest version of Miniconda after
installation?}

\item{force}{Boolean; force re-installation if Miniconda is already installed
at the requested path?}

\item{packages}{A vector of Python packages to install.}

\item{...}{
  Arguments passed on to \code{\link[reticulate:py_install]{reticulate::py_install}}
  \describe{
    \item{\code{envname}}{The name, or full path, of the environment in which Python
packages are to be installed. When \code{NULL} (the default), the active
environment as set by the \code{RETICULATE_PYTHON_ENV} variable will be used;
if that is unset, then the \code{r-reticulate} environment will be used.}
    \item{\code{method}}{Installation method. By default, "auto" automatically finds a
method that will work in the local environment. Change the default to force
a specific installation method. Note that the "virtualenv" method is not
available on Windows.}
    \item{\code{conda}}{The path to a \code{conda} executable. Use \code{"auto"} to allow
\code{reticulate} to automatically find an appropriate \code{conda} binary.
See \strong{Finding Conda} and \code{\link[reticulate:conda_binary]{conda_binary()}} for more details.}
    \item{\code{python_version}}{The requested Python version. Ignored when attempting
to install with a Python virtual environment.}
    \item{\code{pip}}{Boolean; use \code{pip} for package installation? This is only relevant
when Conda environments are used, as otherwise packages will be installed
from the Conda repositories.}
    \item{\code{pip_ignore_installed,ignore_installed}}{Boolean; whether pip should
ignore previously installed versions of the requested packages. Setting
this to \code{TRUE} causes pip to install the latest versions of all
dependencies into the requested environment. This ensure that no
dependencies are satisfied by a package that exists either in the site
library or was previously installed from a different--potentially
incompatible--distribution channel. (\code{ignore_installed} is an alias for
\code{pip_ignore_installed}, \code{pip_ignore_installed} takes precedence).}
  }}
}
\value{
Null
}
\description{
Install miniconda and setup a conda env to use python dependencies.
}
\examples{
\dontrun{
setup_conda()
}
}
